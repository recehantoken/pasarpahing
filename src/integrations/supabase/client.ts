
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://iyudhcpeqdubzyvgjcls.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Iml5dWRoY3BlcWR1Ynp5dmdqY2xzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzkyMTg0MTEsImV4cCI6MjA1NDc5NDQxMX0.Htgiab2562xZyf4_DNhzaVSIiZNaYCRUpWSeENZ7TFM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to ensure the product-images bucket exists
export const ensureStorageBucket = async () => {
  try {
    // Check if product-images bucket exists
    const { data: buckets, error: listError } = await supabase.storage.listBuckets();
    
    if (listError) {
      console.error("Error checking buckets:", listError);
      return false;
    }
    
    const bucketExists = buckets?.some(b => b.name === 'product-images');
    
    if (!bucketExists) {
      console.log("Creating product-images bucket");
      const { error: createError } = await supabase.storage.createBucket('product-images', {
        public: true,
        fileSizeLimit: 10485760, // 10MB
        allowedMimeTypes: ['image/png', 'image/jpeg', 'image/gif', 'image/webp', 'image/svg+xml']
      });
      
      if (createError) {
        console.error("Error creating product-images bucket:", createError);
        return false;
      }
      
      // Set public bucket policy
      const { error: policyError } = await supabase.storage.from('product-images').getPublicUrl('test.png');
      if (policyError) {
        console.error("Warning: Could not confirm public policy:", policyError);
        // We continue anyway since the bucket was created
      }
    }
    
    return true;
  } catch (error) {
    console.error("Error in ensureStorageBucket:", error);
    return false;
  }
};
