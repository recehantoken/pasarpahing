
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://iyudhcpeqdubzyvgjcls.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Iml5dWRoY3BlcWR1Ynp5dmdqY2xzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzkyMTg0MTEsImV4cCI6MjA1NDc5NDQxMX0.Htgiab2562xZyf4_DNhzaVSIiZNaYCRUpWSeENZ7TFM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to ensure the product-images bucket exists
export const ensureStorageBucket = async () => {
  try {
    // Due to RLS issues, we'll just check if buckets exist but won't create them
    // This functionality should be handled by server-side migrations instead
    
    const { data: buckets, error: listError } = await supabase.storage.listBuckets();
    
    if (listError) {
      console.error("Error checking buckets:", listError);
      return false;
    }
    
    const productBucketExists = buckets?.some(b => b.name === 'product-images');
    const avatarBucketExists = buckets?.some(b => b.name === 'avatars');
    
    if (!productBucketExists) {
      console.log("'product-images' bucket doesn't exist. Products will use public images only.");
    }
    
    if (!avatarBucketExists) {
      console.log("'avatars' bucket doesn't exist. Profiles will use default avatars only.");
    }
    
    return true;
  } catch (error) {
    console.error("Error in ensureStorageBucket:", error);
    return false;
  }
};

// Helper function to get the public URL of a file
export const getPublicUrl = (bucketName: string, filePath: string) => {
  const { data } = supabase.storage.from(bucketName).getPublicUrl(filePath);
  return data.publicUrl;
};
